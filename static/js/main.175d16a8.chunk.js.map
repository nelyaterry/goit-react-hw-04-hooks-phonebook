{"version":3,"sources":["Components/App/App.styled.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.styled.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","index.js"],"names":["Title","styled","h1","SubTitle","h2","Phonebook","div","ContactBox","Button","button","ButtonText","children","onClick","Form","form","Label","label","InputName","span","Input","input","ContactForm","onSubmit","useState","name","setName","number","setNumber","id","setId","Contact","handelChange","e","currentTarget","value","uuidv4","reset","preventDefault","type","pattern","title","required","onChange","propTypes","PropTypes","func","ContacstList","ul","li","ContactName","ContactPhone","MessageNotFound","p","Contacts","contacts","handleDeleteContact","length","map","h3","Filter","changeFilter","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","data","some","contact","toLowerCase","trim","alert","prevState","target","filterNormalized","includes","getFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.175d16a8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 64px;\r\n  margin: 24px 24px;\r\n  color: rgb(93 203 152);\r\n`;\r\nexport const SubTitle = styled.h2`\r\n  color: rgb(75, 75, 75);\r\n  margin: 0;\r\n`;\r\nexport const Phonebook = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContactBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  background-color: rgba(165, 230, 250, 0.3);\r\n  width: 65%;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  height: 50px;\r\n  padding: 12px 24px;\r\n  font-size: 18px;\r\n  color: white;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152);\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button.styled\";\r\n\r\nconst ButtonText = ({ children, onClick }) => {\r\n  return <Button onClick={onClick}>{children}</Button>;\r\n};\r\n\r\nButtonText.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ButtonText;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  padding: 24px 32px;\r\n  background-color: rgba(67, 67, 67, 0.3);\r\n\r\n  & > button {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const InputName = styled.span`\r\n  margin-bottom: 16px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 8px 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgba(228, 228, 228, 0.5);\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport { Form, Label, InputName, Input } from \"./ContactForm.styled\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n\r\n  const Contact = {\r\n    name: name,\r\n    number: number,\r\n    id: id,\r\n  };\r\n\r\n  const handelChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    setId(uuidv4());\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(Contact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handelSubmit}>\r\n      <Label>\r\n        <InputName>Name</InputName>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        <InputName>Number</InputName>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <ButtonText type=\"submit\">Add Contact</ButtonText>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContacstList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 12px;\r\n  margin-bottom: 12px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152 / 20%);\r\n`;\r\n\r\nexport const ContactName = styled.span`\r\n  width: 40%;\r\n  margin-right: 12px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const ContactPhone = styled.span`\r\n  margin-right: 12px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const MessageNotFound = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport {\r\n  ContacstList,\r\n  Contact,\r\n  ContactName,\r\n  ContactPhone,\r\n  MessageNotFound,\r\n} from \"./Contacts.styled\";\r\n\r\nconst Contacts = ({ contacts, handleDeleteContact }) => {\r\n  return (\r\n    // <p>helloWorld {contacts[0]}</p>\r\n    contacts.length > 0 ? (\r\n      <ContacstList>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <Contact key={id}>\r\n            <ContactName>{name}</ContactName>\r\n            <ContactPhone>{number}</ContactPhone>\r\n            <ButtonText type=\"button\" onClick={() => handleDeleteContact(id)}>\r\n              Delete\r\n            </ButtonText>\r\n          </Contact>\r\n        ))}\r\n      </ContacstList>\r\n    ) : (\r\n      <MessageNotFound>Contact not found</MessageNotFound>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  handleDeleteContact: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h3`\r\n  color: rgb(93 203 152);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  /* height: 40px; */\r\n  padding: 8px 24px;\r\n  margin-bottom: 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  /* background-color: rgba(228, 228, 228, 0.5); */\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { Title, Input } from \"./Filter.styled\";\r\nconst Filter = ({ value, changeFilter }) => {\r\n  return (\r\n    <>\r\n      <Title>Find contact by name</Title>\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={changeFilter} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\n\nimport { Phonebook, Title, SubTitle, ContactBox } from \"./App.styled\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(\n    () =>\n      JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [\n        { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n        { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n        { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n        { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      ]\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (data) => {\n    !contacts.some(\n      (contact) => contact.name.toLowerCase().trim() === data.name.toLowerCase()\n    )\n      ? setContacts((prevState) => [...prevState, data])\n      : alert(` ${data.name} is alredy in the contacts list`);\n  };\n\n  const handleDeleteContact = (id) => {\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== id)\n    );\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.target.value.trim());\n  };\n\n  const getFilteredContacts = () => {\n    const filterNormalized = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterNormalized)\n    );\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Phonebook>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <ContactBox>\n          <SubTitle>Contacts</SubTitle>\n          <Filter value={filter} changeFilter={changeFilter} />\n          <Contacts\n            contacts={getFilteredContacts()}\n            handleDeleteContact={handleDeleteContact}\n          />\n        </ContactBox>\n      </Phonebook>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}